(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{"8rQc":function(e,t,i){"use strict";i.r(t),i.d(t,"OvertimeManagementModule",function(){return b});var o=i("ofXK"),s=i("tyNb"),a=i("PSoG"),c=i("XFO8"),r=i("fXoL");const l=[{path:"",canActivateChild:[a.a],data:{allowedRoles:["HR Admin","Super Admin"]},children:[{path:"",redirectTo:"employee/lists",pathMatch:"full"},{path:"employee/lists",resolve:[c.a],loadChildren:()=>Promise.all([i.e(2),i.e(3),i.e(0),i.e(26)]).then(i.bind(null,"7qMt")).then(e=>e.OvertimeEmployeeListsModule)},{path:"employee/overtime-lists-view/:overtimeId/:employeeId",resolve:[c.a],loadChildren:()=>Promise.all([i.e(2),i.e(0),i.e(39)]).then(i.bind(null,"cmVh")).then(e=>e.OvertimeListsViewModule)},{path:"employee/overtime-lists/:id",resolve:[c.a],loadChildren:()=>Promise.all([i.e(1),i.e(2),i.e(0),i.e(40)]).then(i.bind(null,"LsUh")).then(e=>e.OvertimeListsModule)}]}];let n=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=r["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=r["\u0275\u0275defineInjector"]({imports:[[s.k.forChild(l)],s.k]}),e})();var p=i("Lt93"),m=i("+6OB"),O=i("l7P3"),d=i("MC/c"),v=i("9jGm"),u=i("ebz3");let b=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=r["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=r["\u0275\u0275defineInjector"]({providers:[c.a,p.a,m.a],imports:[[o.c,n,u.a,O.j.forFeature("EmployeeOvertimeManagement",d.i),v.c.forFeature(d.a)]]}),e})()},"MC/c":function(e,t,i){"use strict";i.d(t,"b",function(){return o}),i.d(t,"c",function(){return s}),i.d(t,"i",function(){return F}),i.d(t,"a",function(){return G}),i.d(t,"d",function(){return N}),i.d(t,"h",function(){return Q}),i.d(t,"f",function(){return V}),i.d(t,"e",function(){return W}),i.d(t,"g",function(){return x});var o={};i.r(o),i.d(o,"loadEmployeeOvertimes",function(){return c}),i.d(o,"loadEmployeeOvertimesSuccess",function(){return r}),i.d(o,"loadEmployeeOvertimesFailure",function(){return l}),i.d(o,"saveEmployeeOvertimes",function(){return n}),i.d(o,"saveEmployeeOvertimesSuccess",function(){return p}),i.d(o,"saveEmployeeOvertimesFailure",function(){return m}),i.d(o,"updateEmployeeOvertimes",function(){return O}),i.d(o,"updateEmployeeOvertimesSuccess",function(){return d}),i.d(o,"updateEmployeeOvertimesFailure",function(){return v});var s={};i.r(s),i.d(s,"loadEmployeeOvertimeDescriptions",function(){return u}),i.d(s,"loadEmployeeOvertimeDescriptionsSuccess",function(){return b}),i.d(s,"loadEmployeeOvertimeDescriptionsFailure",function(){return j});var a=i("l7P3");const c=Object(a.n)("[EmployeeOvertime] Load EmployeeOvertimes",Object(a.s)()),r=Object(a.n)("[EmployeeOvertime] Load EmployeeOvertimes Success",Object(a.s)()),l=Object(a.n)("[EmployeeOvertime] Load EmployeeOvertimes Failure",Object(a.s)()),n=Object(a.n)("[EmployeeOvertime] Save EmployeeOvertimes",Object(a.s)()),p=Object(a.n)("[EmployeeOvertime] Save EmployeeOvertimes Success",Object(a.s)()),m=Object(a.n)("[EmployeeOvertime] Save EmployeeOvertimes Failure",Object(a.s)()),O=Object(a.n)("[EmployeeOvertime] Update EmployeeOvertimes",Object(a.s)()),d=Object(a.n)("[EmployeeOvertime] Update EmployeeOvertimes Success",Object(a.s)()),v=Object(a.n)("[EmployeeOvertime] Update EmployeeOvertimes Failure",Object(a.s)()),u=Object(a.n)("[EmployeeOvertimeDescription] Load EmployeeOvertimeDescriptions",Object(a.s)()),b=Object(a.n)("[EmployeeOvertimeDescription] Load EmployeeOvertimeDescriptions Success",Object(a.s)()),j=Object(a.n)("[EmployeeOvertimeDescription] Load EmployeeOvertimeDescriptions Failure",Object(a.s)());var y=i("R0sL");const h=Object(y.a)(),E=h.getInitialState({loaded:!1,loading:!1,error:null}),f=Object(a.p)(E,Object(a.r)(o.loadEmployeeOvertimes,e=>Object.assign(Object.assign({},e),{loading:!0})),Object(a.r)(o.loadEmployeeOvertimesSuccess,(e,t)=>(e=Object.assign(Object.assign({},e),{loading:!1,loaded:!0}),h.removeAll(e),h.setAll(t.payload,Object.assign(Object.assign({},e),{loading:!1,loaded:!0})))),Object(a.r)(o.saveEmployeeOvertimesSuccess,(e,t)=>h.addOne(t.payload,e)),Object(a.r)(o.saveEmployeeOvertimesFailure,(e,t)=>Object.assign(Object.assign({},e),{error:"failed to save",loading:!1,loaded:!1})),Object(a.r)(o.updateEmployeeOvertimesSuccess,(e,t)=>{const i=t.payload;return h.updateOne({id:i.id,changes:Object.assign({},i)},e)})),{selectAll:S}=h.getSelectors(),g=Object(y.a)({}),D=g.getInitialState({loaded:!1,loading:!1,error:null}),w=Object(a.p)(D,Object(a.r)(s.loadEmployeeOvertimeDescriptions,e=>Object.assign(Object.assign({},e),{loading:!0})),Object(a.r)(s.loadEmployeeOvertimeDescriptionsSuccess,(e,t)=>(e=Object.assign(Object.assign({},e),{loading:!1,loaded:!0}),g.setAll(t.payload,Object.assign({},e))))),{selectAll:$}=g.getSelectors(),F={employeeOvertime:f,employeeOvertimeDescription:w},L=Object(a.o)("EmployeeOvertimeManagement");var M=i("9jGm"),I=i("vkgz"),q=i("lJxs"),C=i("eIep"),A=i("JIr8"),P=i("G4OQ"),k=i("PSD3"),H=i.n(k),J=i("fXoL"),B=i("JqCM"),T=i("dPL8"),U=i("J9tS");const G=[(()=>{class e{constructor(e,t,i,s){this.actions$=e,this.spinner=t,this.toastHotService=i,this.employeeOvertimeService=s,this.loadEmployeeOvertime$=Object(M.d)(()=>this.actions$.pipe(Object(M.e)(o.loadEmployeeOvertimes),Object(I.a)(()=>{this.spinner.show("employeeLoading")}),Object(q.a)(e=>e),Object(C.a)(e=>this.employeeOvertimeService.getAllEmployeeOvertime(e.userId).pipe(Object(q.a)(e=>o.loadEmployeeOvertimesSuccess({payload:e})),Object(A.a)(e=>Object(P.of)(o.loadEmployeeOvertimesFailure({payload:"failed to load employee Overtime"})))))),{dispatch:!0}),this.loadEmployeeOvertimeSuccess$=Object(M.d)(()=>this.actions$.pipe(Object(M.e)(o.loadEmployeeOvertimesSuccess),Object(q.a)(()=>{this.spinner.hide("employeeLoading")})),{dispatch:!1}),this.saveEmployeeOvertime$=Object(M.d)(()=>this.actions$.pipe(Object(M.e)(o.saveEmployeeOvertimes),Object(I.a)(()=>{H.a.fire({title:"Please Wait !",html:"Saving data please wait...",allowOutsideClick:!1,showConfirmButton:!1,onBeforeOpen:()=>{H.a.showLoading()}})}),Object(q.a)(e=>e),Object(C.a)(e=>this.employeeOvertimeService.postEmployeeOvertime(e.payload).pipe(Object(q.a)(e=>o.saveEmployeeOvertimesSuccess({payload:e})),Object(A.a)(e=>Object(P.of)(o.saveEmployeeOvertimesFailure({payload:"failed to save employee Overtime"})))))),{dispatch:!0}),this.saveEmployeeOvertimeSuccess$=Object(M.d)(()=>this.actions$.pipe(Object(M.e)(o.saveEmployeeOvertimesSuccess),Object(q.a)(()=>{H.a.close(),this.toastHotService.success("<b>Data saved!</b>")})),{dispatch:!1}),this.saveEmployeeOvertimeFailure$=Object(M.d)(()=>this.actions$.pipe(Object(M.e)(o.saveEmployeeOvertimesFailure),Object(q.a)(()=>{this.toastHotService.error("<b>Failed  to save try again!</b>")})),{dispatch:!1}),this.updateEmployeeOvertime$=Object(M.d)(()=>this.actions$.pipe(Object(M.e)(o.updateEmployeeOvertimes),Object(I.a)(()=>{H.a.fire({title:"Please Wait !",html:"Updating data please wait...",allowOutsideClick:!1,showConfirmButton:!1,onBeforeOpen:()=>{H.a.showLoading()}})}),Object(q.a)(e=>e),Object(C.a)(e=>this.employeeOvertimeService.putEmployeeOvertime(e.payload).pipe(Object(q.a)(e=>o.updateEmployeeOvertimesSuccess({payload:e})),Object(A.a)(e=>Object(P.of)(o.updateEmployeeOvertimesFailure({payload:"failed to save employee Overtime"})))))),{dispatch:!0}),this.updateEmployeeOvertimeSuccess$=Object(M.d)(()=>this.actions$.pipe(Object(M.e)(o.updateEmployeeOvertimesSuccess),Object(q.a)(()=>{H.a.close(),this.toastHotService.success("<b>Data updated!</b>")})),{dispatch:!1}),this.updateEmployeeOvertimeFailure$=Object(M.d)(()=>this.actions$.pipe(Object(M.e)(o.updateEmployeeOvertimesFailure),Object(q.a)(()=>{H.a.close()})),{dispatch:!1})}}return e.\u0275fac=function(t){return new(t||e)(J["\u0275\u0275inject"](M.a),J["\u0275\u0275inject"](B.c),J["\u0275\u0275inject"](T.b),J["\u0275\u0275inject"](U.r))},e.\u0275prov=J["\u0275\u0275defineInjectable"]({token:e,factory:e.\u0275fac}),e})(),(()=>{class e{constructor(e,t,i,o){this.employeeOvertimeDescService=e,this.spinner=t,this.toastHotService=i,this.actions$=o,this.loadEmployeeOvertimeDesc$=Object(M.d)(()=>this.actions$.pipe(Object(M.e)(s.loadEmployeeOvertimeDescriptions),Object(I.a)(()=>{this.spinner.show("employeeLoading")}),Object(q.a)(e=>e),Object(C.a)(e=>this.employeeOvertimeDescService.getAllEmployeeOvertimeDescription(e.userId,e.overtimeId).pipe(Object(q.a)(e=>s.loadEmployeeOvertimeDescriptionsSuccess({payload:e})),Object(A.a)(e=>Object(P.of)(s.loadEmployeeOvertimeDescriptionsFailure({payload:"failed to load data"})))))),{dispatch:!0}),this.loadEmployeeOvertimeDescSuccess$=Object(M.d)(()=>this.actions$.pipe(Object(M.e)(s.loadEmployeeOvertimeDescriptionsSuccess),Object(q.a)(()=>{this.spinner.hide("employeeLoading")})),{dispatch:!1})}}return e.\u0275fac=function(t){return new(t||e)(J["\u0275\u0275inject"](U.q),J["\u0275\u0275inject"](B.c),J["\u0275\u0275inject"](T.b),J["\u0275\u0275inject"](M.a))},e.\u0275prov=J["\u0275\u0275defineInjectable"]({token:e,factory:e.\u0275fac}),e})()],X=Object(a.q)(L,e=>e.employeeOvertime),N=Object(a.q)(X,S),R=(Object(a.q)(X,e=>e.loaded),Object(a.q)(L,e=>e.employeeOvertimeDescription)),z=Object(a.q)(R,$),Q=Object(a.q)(z,e=>e.filter(e=>2===e.overtimeType)),V=Object(a.q)(z,e=>e.filter(e=>3===e.overtimeType)),W=Object(a.q)(z,e=>e.filter(e=>4===e.overtimeType)),x=Object(a.q)(z,e=>e.filter(e=>5===e.overtimeType))}}]);